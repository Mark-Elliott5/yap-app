// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}

model Yap {
  id          String   @id @default(cuid())
  text        String?
  date        DateTime
  image       String?
  likes       User[]   @relation(name: "LikedYaps")
  author      User     @relation(name: "AuthoredYaps", fields: [authorId], references: [id])
  authorId    String
  echos       User[]   @relation(name: "Echos")
  replies     Yap[]    @relation("ParentYap")
  parentYap   Yap?     @relation("ParentYap", fields: [parentYapId], references: [id])
  parentYapId String?
}

model User {
  id            String    @id @default(cuid())
  name          String?
  displayName   String?
  username      String?   @unique
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  imageKey      String?
  joinDate      DateTime?
  role          UserRole  @default(USER)
  OAuth         Boolean   @default(false)
  private       Boolean   @default(false)
  bio           String?
  yaps          Yap[]     @relation(name: "AuthoredYaps")
  likedYaps     Yap[]     @relation(name: "LikedYaps")
  echos         Yap[]     @relation(name: "Echos")
  accounts      Account[]
  sessions      Session[]
}

// pnpx prisma generate     
// pnpx prisma db push
